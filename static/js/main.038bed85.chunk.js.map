{"version":3,"sources":["gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js","img/bg.png"],"names":["createStage","Array","from","fill","checkCollision","player","stage","_ref","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","_templateObject","_taggedTemplateLiteral","bgImage","StyledTetris","_templateObject2","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","_useState","useState","_useState2","_slicedToArray","setStage","_useState3","_useState4","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","concat","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","React","memo","createElement","console","log","Stage","Cell","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","_usePlayer","setPlayer","rotate","matrix","dir","mtrx","_","index","column","reverse","useCallback","STAGE_WIDTH","_objectSpread","clonedPlayer","JSON","parse","stringify","offset","usePlayer","_usePlayer2","updatePlayerPos","playerRotate","_useStage","_useStage2","_useGameStatus","score","setScore","rows","setRows","_useState5","_useState6","level","setLevel","linePoints","calcScore","useGameStatus","_useGameStatus2","movePlayer","drop","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","move","_ref2","keyCode","role","tabIndex","onKeyDown","e","onKeyUp","App","className","ReactDOM","render","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.038bed85.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () => Array(STAGE_WIDTH).fill([0, 'clear']));\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n \n\n  // To use loops to be able to return and break\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // This checks we are in the correct cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // This checks the move is being done inside the height (y)\n          // That we're not go through bottom of the play area\n          !stage[y + player.pos.y + moveY] ||\n          // This checks the moves done are inside the game areas width (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // This checks that the cell we are moving are not set to clear\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n  // 5. If everything above is false\n  return false;\n};\n","import styled from 'styled-components';\n// BG Image\nimport bgImage from '../../img/bg.png';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;\n","export const TETROMINOS = {\n  0: { shape: [[0]], color: '0, 0, 0' },\n  I: {\n    shape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]],\n    color: '80, 227, 230',\n  },\n  J: { shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]], color: '36, 95, 223' },\n  L: {\n    shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n    color: '223, 173, 36',\n  },\n  O: { shape: [['O', 'O'], ['O', 'O']], color: '223, 217, 36' },\n  S: { shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]], color: '48, 211, 56' },\n  T: {\n    shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n    color: '132, 61, 198',\n  },\n  Z: { shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]], color: '227, 78, 78' },\n};\n\nexport const randomTetromino = () => {\n  const tetrominos = 'IJLOSTZ';\n  const randTetromino =\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randTetromino];\n};\n","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n    const sweepRows = newStage =>\n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1);\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return ack;\n        }\n        ack.push(row);\n        return ack;\n      }, []);\n\n    const updateStage = prevStage => {\n      // First flush the stage\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n      );\n\n      // Then draw the tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`,\n            ];\n          }\n        });\n      });\n      // it checks if we have score if it collides \n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n      return newStage;\n    };\n\n    // updates\n    setStage(prev => updateStage(prev));\n  }, [\n    player.collided,\n    player.pos.x,\n    player.pos.y,\n    player.tetromino,\n    resetPlayer,\n  ]);\n\n  return [stage, setStage, rowsCleared];\n};\n","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #DA70D6;;\n  width: 100%;\n  max-width: 25vw;\n  background: rgba(0, 0, 0, 0.5);\n`;\n","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  /* border-radius: 5px; */\n  background: transparent;\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`;\n","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\n// Will only re-render the changed cells\nconst Cell = ({ type }) => (\n  <StyledCell type={type} color={TETROMINOS[type].color}>\n    {console.log('rerender cell')}\n  </StyledCell>\n);\n\nexport default React.memo(Cell);\n","import React from 'react';\nimport { StyledStage } from './styles/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n  </StyledStage>\n);\n\nexport default Stage;\n","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #DA70D6;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')} ;\n  background: transparent;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;\n","import React from 'react';\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n);\n\nexport default Display;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledStartButton = styled.button`\n  box-sizing: border-box;\n\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: cyan;\n  background: #111;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`;\n\nconst StartButton = ({ callback }) => (\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n);\n\nexport default StartButton;\n","import React, { useState } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n    rowsCleared\n  );\n\n  console.log('re-render');\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      // Activate the interval again when user releases down arrow.\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1));\n      }\n    }\n  };\n\n  const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setScore(0);\n    setLevel(0);\n    setRows(0);\n    setGameOver(false);\n  };\n\n  const drop = () => {\n    // Increase level when player has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1);\n      // Also increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      // Game over!\n      if (player.pos.y < 1) {\n        console.log('GAME OVER!!!');\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const dropPlayer = () => {\n    // We don't need to run the interval when we use the arrow down to\n    // move the tetromino downwards. So deactivate it for now.\n    setDropTime(null);\n    drop();\n  };\n\n  // This one starts the game\n  // Custom hook by Dan Abramov\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={e => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text={`Score: ${score}`} />\n              <Display text={`rows: ${rows}`} />\n              <Display text={`Level: ${level}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n    // Using the state hook to initialize player data\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n//This function will rotate the plater's tetromino when called\n  function rotate(matrix, dir) {\n    // Make the rows to become cols \n    const mtrx = matrix.map((_, index) => matrix.map(column => column[index]));\n    // Reverse each row to get a rotaded matrix\n    if (dir > 0) return mtrx.map(row => row.reverse());\n    return mtrx.reverse();\n  }\n\n  function playerRotate(stage, dir) {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n     // Checking for collisions and adjusting position until there is no collision\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n    // Setting the state of player to the updated cloned player object\n    setPlayer(clonedPlayer);\n  }\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided,\n    }));\n  };\n\n   // This function resets the player to the starting position with a new random tetromino\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false,\n    });\n  }, []);\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};\n","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  const linePoints = [40, 100, 300, 1200];\n\n  const calcScore = useCallback(() => {\n    // This is for score\n    if (rowsCleared > 0) {\n      \n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows(prev => prev + rowsCleared); //How tetris score is calculated\n    }\n  }, [level, linePoints, rowsCleared]);\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/bg.ba517ca1.png\";"],"sourceRoot":""}